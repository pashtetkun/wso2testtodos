<?xml version="1.0" encoding="UTF-8"?>
<api context="/uploadFile" name="UploadFileApi" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST">
        <inSequence>
            <!-- Reading the JSON attributes from the request payload; -->
            <property expression="json-eval($.mediate.*.@filename[0])" name="fileName" scope="default" type="STRING"/>
            <property expression="json-eval($.mediate.*.$[0].*[0])" name="fileContent" scope="default" type="STRING"/>
            <log level="custom">
                <property name="message" value="is Upload File API in"/>
                <property expression="get-property('fileName')" name="fileNameValue"/>
            </log>
            <!-- Creating the Payload for a binary payload -->
            <payloadFactory media-type="xml">
                <format>
                    <ns:binary xmlns:ns="http://ws.apache.org/commons/ns/payload">$1</ns:binary>
                </format>
                <args>
                    <arg evaluator="xml" expression="$ctx:fileContent"/>
                </args>
            </payloadFactory>
            <log level="custom">
                <property name="message" value="is Upload File API after create new payload"/>
            </log>
            <!-- Even using a binary payload, the Axis2 frameworks keeps considering the payload as text. We use a script mediator to set the first node as binary -->
            <script language="js"><![CDATA[var binaryNode = mc.getEnvelope().getBody().getFirstElement().getFirstOMChild();  
   				binaryNode.setBinary(true);]]></script>
            <property expression="$ctx:fileName" name="transport.vfs.ReplyFileName" scope="transport" type="STRING"/>
            <property name="transport.vfs.Locking" scope="transport" type="STRING" value="disable"/>
            <!-- We need to set the OUT_ONLY property and remove the REST_URL_POSTFIX to make the API to be able to save the file and set the expected file name -->
            <property name="OUT_ONLY" scope="default" type="STRING" value="true"/>
            <property action="remove" name="REST_URL_POSTFIX" scope="axis2"/>
            <property name="messageType" scope="axis2" type="STRING" value="application/octet-stream"/>
            <call>
                <endpoint>
                    <address uri="vfs:file:///C:/8out3"/>
                </endpoint>
            </call>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
</api>
